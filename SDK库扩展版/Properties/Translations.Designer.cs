//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeagueSharp.SDK.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Translations {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Translations() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LeagueSharp.SDK.Properties.Translations", typeof(Translations).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 {
        ///    &quot;Aatrox&quot;: &quot;暗裔剑魔-亚托克斯&quot;,
        ///    &quot;Ahri&quot;: &quot;九尾妖狐-阿狸&quot;,
        ///    &quot;Akali&quot;: &quot;暗影之拳-阿卡丽&quot;,
        ///    &quot;Alistar&quot;: &quot;牛头酋长-阿利斯塔&quot;,
        ///    &quot;Amumu&quot;: &quot;殇之木乃伊-阿木木&quot;,
        ///    &quot;Anivia&quot;: &quot;冰晶凤凰-艾尼维亚&quot;,
        ///    &quot;Annie&quot;: &quot;黑暗之女-安妮&quot;,
        ///    &quot;Ashe&quot;: &quot;寒冰射手-艾希&quot;,
        ///    &quot;Azir&quot;: &quot;沙漠皇帝-阿兹尔&quot;,
        ///    &quot;Aurelion Sol&quot;: &quot;奥瑞利安索尔-铸星龙王&quot;,
        ///    &quot;Bard&quot;: &quot;星界游神-巴德&quot;,
        ///    &quot;Blitzcrank&quot;: &quot;蒸汽机器人-布里茨&quot;,
        ///    &quot;Brand&quot;: &quot;复仇焰魂-布兰德&quot;,
        ///    &quot;Braum&quot;: &quot;弗雷尔卓德之心-布隆&quot;,
        ///    &quot;Caitlyn&quot;: &quot;皮城女警-凯特琳&quot;,
        ///    &quot;Cassiopeia&quot;: &quot;魔蛇之拥—卡西奥佩娅&quot;,
        ///    &quot;Chogath&quot;: &quot;虚空恐惧-科加斯&quot;,
        ///    &quot;Corki&quot;: &quot;英勇投弹手-库奇&quot;,
        ///    &quot;Darius&quot; [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string ChineseJson {
            get {
                return ResourceManager.GetString("ChineseJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///{
        ///    &quot;Aatrox&quot;: &quot;\u51a5\u8840\u90aa\u528d-\u5384\u85a9\u65af&quot;,
        ///    &quot;Ahri&quot;: &quot;\u4e5d\u5c3e\u5996\u72d0-\u963f\u7483&quot;,
        ///    &quot;Akali&quot;: &quot;\u6697\u5f71\u4e4b\u62f3-\u963f\u5361\u8389&quot;,
        ///    &quot;Alistar&quot;: &quot;\u725b\u982d\u914b\u9577-\u4e9e\u6b77\u65af\u5854&quot;,
        ///    &quot;Amumu&quot;: &quot;\u6ba4\u4e4b\u6728\u4e43\u4f0a-\u963f\u59c6\u59c6&quot;,
        ///    &quot;Anivia&quot;: &quot;\u51b0\u6676\u9cf3\u51f0-\u827e\u59ae\u7dad\u4e9e&quot;,
        ///    &quot;Annie&quot;: &quot;\u9ed1\u6697\u4e4b\u5973-\u5b89\u59ae&quot;,
        ///    &quot;Ashe&quot;: &quot;\u51b0\u971c\u5c04\u624b-\u827e\u5e0c&quot;,
        ///    &quot;Azir&quot;: &quot;\u8607\u745e\u [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string TraditionalChineseJson {
            get {
                return ResourceManager.GetString("TraditionalChineseJson", resourceCulture);
            }
        }
    }
}
